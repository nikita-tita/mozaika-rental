import { PrismaClient } from '@prisma/client'
import { hashPassword } from '../src/lib/auth'

const prisma = new PrismaClient()

async function createSimpleUser() {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const hashedPassword = await hashPassword('123456')
    
    const user = await prisma.user.create({
      data: {
        email: 'user@test.com',
        password: hashedPassword,
        firstName: '–ü—Ä–æ—Å—Ç–æ–π',
        lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        phone: '+7 (999) 000-00-00',
        role: 'REALTOR',
        verified: true
      }
    })
    
    console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:')
    console.log('üìß Email:', user.email)
    console.log('üîë –ü–∞—Ä–æ–ª—å: 123456')
    console.log('üë§ –ò–º—è:', user.firstName, user.lastName)
    console.log('üéØ –†–æ–ª—å:', user.role)
    console.log('‚úÖ Verified:', user.verified)
    
  } catch (error) {
    if (error.code === 'P2002') {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
    }
  } finally {
    await prisma.$disconnect()
  }
}

createSimpleUser() 