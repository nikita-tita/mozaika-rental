const { execSync } = require('child_process')
const fs = require('fs')
const path = require('path')

console.log('üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n')

async function safeSchemaUpdate() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ö–µ–º—ã...')
    
    // –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π —Å—Ö–µ–º—ã
    const backupPath = path.join(__dirname, '../prisma/schema.backup.prisma')
    if (fs.existsSync(path.join(__dirname, '../prisma/schema.prisma'))) {
      fs.copyFileSync(
        path.join(__dirname, '../prisma/schema.prisma'),
        backupPath
      )
      console.log('   ‚úÖ –ë—ç–∫–∞–ø —Å—Ö–µ–º—ã —Å–æ–∑–¥–∞–Ω')
    }

    // 2. –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ö–µ–º—É –∏–∑ –±–∞–∑—ã
    console.log('\n2Ô∏è‚É£ –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Ö–µ–º—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
    try {
      execSync('npx prisma db pull', { 
        stdio: 'inherit',
        cwd: path.join(__dirname, '..')
      })
      console.log('   ‚úÖ –°—Ö–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö')
    } catch (error) {
      console.log('   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–∏ —Å—Ö–µ–º—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...')
    }

    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client
    console.log('\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client...')
    try {
      execSync('npx prisma generate', { 
        stdio: 'inherit',
        cwd: path.join(__dirname, '..')
      })
      console.log('   ‚úÖ Prisma Client –æ–±–Ω–æ–≤–ª–µ–Ω')
    } catch (error) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞')
      throw error
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...')
    try {
      execSync('node scripts/check-db-data.js', { 
        stdio: 'inherit',
        cwd: path.join(__dirname, '..')
      })
    } catch (error) {
      console.log('   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö')
    }

    // 5. –£–¥–∞–ª—è–µ–º –±—ç–∫–∞–ø –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
    if (fs.existsSync(backupPath)) {
      fs.unlinkSync(backupPath)
      console.log('   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π –±—ç–∫–∞–ø —É–¥–∞–ª–µ–Ω')
    }

    console.log('\nüéâ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:')
    console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø —Å—Ö–µ–º—ã')
    console.log('   ‚úÖ –°—Ö–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö')
    console.log('   ‚úÖ Prisma Client –æ–±–Ω–æ–≤–ª–µ–Ω')
    console.log('   ‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã')
    console.log('   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã')

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã:', error.message)
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–∞–ø –µ—Å–ª–∏ –µ—Å—Ç—å
    const backupPath = path.join(__dirname, '../prisma/schema.backup.prisma')
    if (fs.existsSync(backupPath)) {
      console.log('\nüîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–∞–ø —Å—Ö–µ–º—ã...')
      fs.copyFileSync(backupPath, path.join(__dirname, '../prisma/schema.prisma'))
      fs.unlinkSync(backupPath)
      console.log('   ‚úÖ –ë—ç–∫–∞–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }
    
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
safeSchemaUpdate()
  .then(() => {
    console.log('\nüéØ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  }) 