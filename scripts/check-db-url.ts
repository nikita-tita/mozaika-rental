import { PrismaClient } from '@prisma/client'

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º DATABASE_URL...')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
const dbUrl = process.env.DATABASE_URL
if (dbUrl) {
  console.log('‚úÖ DATABASE_URL –Ω–∞–π–¥–µ–Ω')
  console.log('URL:', dbUrl.substring(0, 20) + '...' + dbUrl.substring(dbUrl.length - 10))
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø URL
  if (dbUrl.startsWith('prisma://')) {
    console.log('üìä –≠—Ç–æ Prisma Data Proxy URL')
  } else if (dbUrl.startsWith('postgresql://')) {
    console.log('üìä –≠—Ç–æ –æ–±—ã—á–Ω—ã–π PostgreSQL URL')
  } else if (dbUrl.startsWith('postgres://')) {
    console.log('üìä –≠—Ç–æ –æ–±—ã—á–Ω—ã–π PostgreSQL URL (–∫–æ—Ä–æ—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)')
  } else {
    console.log('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL')
  }
} else {
  console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω')
}

// –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
const prisma = new PrismaClient()

async function testConnection() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...')
    await prisma.$connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ')
    
    const userCount = await prisma.user.count()
    console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${userCount}`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testConnection() 