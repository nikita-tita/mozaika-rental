const fetch = require('node-fetch');

async function testAuth() {
  const baseUrl = 'https://mozaika-rental-m2-6zuoll69o-nikitas-projects-c62d7451.vercel.app';
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    console.log('üîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    const homeResponse = await fetch(baseUrl);
    console.log('–°—Ç–∞—Ç—É—Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', homeResponse.status);
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º API health
    console.log('\nüîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API health');
    const healthResponse = await fetch(`${baseUrl}/api/health`);
    console.log('–°—Ç–∞—Ç—É—Å health API:', healthResponse.status);
    if (healthResponse.ok) {
      const healthData = await healthResponse.text();
      console.log('Health API –æ—Ç–≤–µ—Ç:', healthData);
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    console.log('\nüîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞');
    const loginResponse = await fetch(`${baseUrl}/login`);
    console.log('–°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞:', loginResponse.status);
    
    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ª–æ–≥–∏–Ω–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüîç –¢–µ—Å—Ç 4: –¢–µ—Å—Ç API –ª–æ–≥–∏–Ω–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    const loginApiResponse = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'wrong@email.com',
        password: 'wrongpassword'
      })
    });
    console.log('–°—Ç–∞—Ç—É—Å API –ª–æ–≥–∏–Ω–∞:', loginApiResponse.status);
    if (loginApiResponse.ok) {
      const loginData = await loginApiResponse.json();
      console.log('–û—Ç–≤–µ—Ç API –ª–æ–≥–∏–Ω–∞:', loginData);
    } else {
      const errorText = await loginApiResponse.text();
      console.log('–û—à–∏–±–∫–∞ API –ª–æ–≥–∏–Ω–∞:', errorText);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testAuth(); 