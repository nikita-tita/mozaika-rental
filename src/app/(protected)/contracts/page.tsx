'use client'

import { useState } from 'react'
import { TeamsCard, TeamsButton, TeamsBadge, TeamsModal } from '@/components/ui/teams'
import { ContractForm } from '@/components/ui/ContractForm'
import { FileText, Download, Eye, Edit, Plus, Calendar, User, Home } from 'lucide-react'

export default function ContractsPage() {
  const [showCreateForm, setShowCreateForm] = useState(false)
  const [generating, setGenerating] = useState(false)
  const [selectedContract, setSelectedContract] = useState<any>(null)
  const [showViewModal, setShowViewModal] = useState(false)
  const [showEditModal, setShowEditModal] = useState(false)
  const [showDownloadMenu, setShowDownloadMenu] = useState<string | null>(null)
  const [contracts, setContracts] = useState([
    {
      id: '1',
      title: '–î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã',
      property: '2-–∫ –∫–≤–∞—Ä—Ç–∏—Ä–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1',
      tenant: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
      startDate: '2024-01-01',
      endDate: '2024-12-31',
      status: 'ACTIVE',
      amount: '45000'
    },
    {
      id: '2',
      title: '–î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã –æ—Ñ–∏—Å–∞',
      property: '–û—Ñ–∏—Å, —É–ª. –ü—É—à–∫–∏–Ω–∞, 10',
      tenant: '–û–û–û "–†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞"',
      startDate: '2024-02-01',
      endDate: '2025-01-31',
      status: 'DRAFT',
      amount: '120000'
    }
  ])

  const handleCreateContract = async (contractData: any) => {
    setGenerating(true)
    setTimeout(() => {
      const newContract = {
        id: Date.now().toString(),
        title: `–î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã ${contractData.property?.title || '–æ–±—ä–µ–∫—Ç–∞'}`,
        property: contractData.property?.address || '–ù–µ —É–∫–∞–∑–∞–Ω',
        tenant: contractData.tenantName,
        startDate: contractData.startDate,
        endDate: contractData.endDate,
        status: 'DRAFT',
        amount: contractData.monthlyRent
      }
      setContracts(prev => [newContract, ...prev])
      setGenerating(false)
      setShowCreateForm(false)
    }, 2000)
  }

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'DRAFT':
        return <TeamsBadge variant="warning">–ß–µ—Ä–Ω–æ–≤–∏–∫</TeamsBadge>
      case 'ACTIVE':
        return <TeamsBadge variant="success">–ê–∫—Ç–∏–≤–µ–Ω</TeamsBadge>
      case 'EXPIRED':
        return <TeamsBadge variant="error">–ò—Å—Ç–µ–∫</TeamsBadge>
      default:
        return <TeamsBadge variant="default">–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ</TeamsBadge>
    }
  }

  const handleViewContract = (contract: any) => {
    setSelectedContract(contract)
    setShowViewModal(true)
  }

  const handleEditContract = (contract: any) => {
    setSelectedContract(contract)
    setShowEditModal(true)
  }

  const handleDownloadContract = async (contract: any, fileType: 'word' | 'pdf' = 'pdf') => {
    try {
      const response = await fetch('/api/contracts/download', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          contractData: contract,
          fileType
        })
      })

      if (response.ok) {
        const blob = await response.blob()
        const url = window.URL.createObjectURL(blob)
        const a = document.createElement('a')
        a.href = url
        a.download = `contract-${contract.id}.${fileType}`
        document.body.appendChild(a)
        a.click()
        window.URL.revokeObjectURL(url)
        document.body.removeChild(a)
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    }
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4 flex items-center">
            <FileText className="w-8 h-8 mr-3 text-blue-600" />
            –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–≥–æ–≤–æ—Ä–æ–≤
          </h1>
          <p className="text-lg text-gray-600">
            –°–æ–∑–¥–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –∞—Ä–µ–Ω–¥—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
          </p>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞ */}
        <div className="mb-8">
          <TeamsButton
            onClick={() => setShowCreateForm(true)}
            variant="primary"
            size="lg"
            className="flex items-center"
          >
            <Plus className="w-5 h-5 mr-2" />
            –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–æ–≥–æ–≤–æ—Ä
          </TeamsButton>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <TeamsCard className="p-6 text-center">
            <div className="text-3xl font-bold text-blue-600 mb-2">{contracts.length}</div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤</div>
          </TeamsCard>
          <TeamsCard className="p-6 text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              {contracts.filter(c => c.status === 'ACTIVE').length}
            </div>
            <div className="text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤</div>
          </TeamsCard>
          <TeamsCard className="p-6 text-center">
            <div className="text-3xl font-bold text-purple-600 mb-2">2.5 –º–∏–Ω</div>
            <div className="text-gray-600">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è</div>
          </TeamsCard>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ */}
        <div className="space-y-4">
          <h2 className="text-xl font-semibold text-gray-900">–ú–æ–∏ –¥–æ–≥–æ–≤–æ—Ä—ã</h2>
          
          {contracts.map((contract) => (
            <TeamsCard key={contract.id} className="p-4">
              <div className="flex items-start justify-between mb-3">
                <div className="flex-1">
                  <h3 className="font-semibold text-gray-900 mb-1">{contract.title}</h3>
                  <div className="text-sm text-gray-600 space-y-1">
                    <div className="flex items-center">
                      <Home className="w-4 h-4 mr-1" />
                      {contract.property}
                    </div>
                    <div className="flex items-center">
                      <User className="w-4 h-4 mr-1" />
                      {contract.tenant}
                    </div>
                    <div className="flex items-center">
                      <Calendar className="w-4 h-4 mr-1" />
                      {contract.startDate} - {contract.endDate}
                    </div>
                    <div className="font-medium text-gray-900">
                      {parseInt(contract.amount).toLocaleString()} ‚ÇΩ/–º–µ—Å
                    </div>
                  </div>
                </div>
                <div className="ml-4">
                  {getStatusBadge(contract.status)}
                </div>
              </div>
              
              <div className="flex gap-2">
                <TeamsButton 
                  variant="outline" 
                  size="sm"
                  onClick={() => handleViewContract(contract)}
                >
                  <Eye className="w-4 h-4 mr-1" />
                  –ü—Ä–æ—Å–º–æ—Ç—Ä
                </TeamsButton>
                <TeamsButton 
                  variant="outline" 
                  size="sm"
                  onClick={() => handleEditContract(contract)}
                >
                  <Edit className="w-4 h-4 mr-1" />
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </TeamsButton>
                <div className="relative">
                  <TeamsButton 
                    variant="outline" 
                    size="sm"
                    onClick={() => setShowDownloadMenu(contract.id)}
                  >
                    <Download className="w-4 h-4 mr-1" />
                    –°–∫–∞—á–∞—Ç—å
                  </TeamsButton>
                  {showDownloadMenu === contract.id && (
                    <div className="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border">
                      <div className="py-1">
                        <button
                          onClick={() => {
                            handleDownloadContract(contract, 'pdf')
                            setShowDownloadMenu(null)
                          }}
                          className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                        >
                          üìÑ –°–∫–∞—á–∞—Ç—å PDF
                        </button>
                        <button
                          onClick={() => {
                            handleDownloadContract(contract, 'word')
                            setShowDownloadMenu(null)
                          }}
                          className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                        >
                          üìù –°–∫–∞—á–∞—Ç—å Word
                        </button>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </TeamsCard>
          ))}
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
        <TeamsModal
          isOpen={showViewModal}
          onClose={() => setShowViewModal(false)}
          title="–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞"
          size="lg"
        >
          {selectedContract && (
            <div className="space-y-4">
              <div className="bg-gray-50 p-4 rounded-lg">
                <h3 className="font-semibold text-lg mb-3">{selectedContract.title}</h3>
                <div className="space-y-2 text-sm">
                  <div><strong>–û–±—ä–µ–∫—Ç:</strong> {selectedContract.property}</div>
                  <div><strong>–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä:</strong> {selectedContract.tenant}</div>
                  <div><strong>–ü–µ—Ä–∏–æ–¥:</strong> {selectedContract.startDate} - {selectedContract.endDate}</div>
                  <div><strong>–°—É–º–º–∞:</strong> {parseInt(selectedContract.amount).toLocaleString()} ‚ÇΩ/–º–µ—Å</div>
                  <div><strong>–°—Ç–∞—Ç—É—Å:</strong> {getStatusBadge(selectedContract.status)}</div>
                </div>
              </div>
            </div>
          )}
        </TeamsModal>

        <TeamsModal
          isOpen={showEditModal}
          onClose={() => setShowEditModal(false)}
          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞"
          size="lg"
        >
          {selectedContract && (
            <div className="space-y-4">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞
                  </label>
                  <input
                    type="text"
                    value={selectedContract.title}
                    onChange={(e) => setSelectedContract({...selectedContract, title: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–±—ä–µ–∫—Ç
                  </label>
                  <input
                    type="text"
                    value={selectedContract.property}
                    onChange={(e) => setSelectedContract({...selectedContract, property: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                </div>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä
                </label>
                <input
                  type="text"
                  value={selectedContract.tenant}
                  onChange={(e) => setSelectedContract({...selectedContract, tenant: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
                  </label>
                  <input
                    type="date"
                    value={selectedContract.startDate}
                    onChange={(e) => setSelectedContract({...selectedContract, startDate: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                  </label>
                  <input
                    type="date"
                    value={selectedContract.endDate}
                    onChange={(e) => setSelectedContract({...selectedContract, endDate: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                </div>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ê—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞
                </label>
                <input
                  type="number"
                  value={selectedContract.amount}
                  onChange={(e) => setSelectedContract({...selectedContract, amount: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –°—Ç–∞—Ç—É—Å
                </label>
                <select
                  value={selectedContract.status}
                  onChange={(e) => setSelectedContract({...selectedContract, status: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="DRAFT">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
                  <option value="ACTIVE">–ê–∫—Ç–∏–≤–µ–Ω</option>
                  <option value="EXPIRED">–ò—Å—Ç–µ–∫</option>
                </select>
              </div>
              
              <div className="flex gap-2 pt-4">
                <TeamsButton
                  onClick={() => {
                    setContracts(prev => prev.map(c => 
                      c.id === selectedContract.id ? selectedContract : c
                    ))
                    setShowEditModal(false)
                  }}
                  className="flex-1"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </TeamsButton>
                <TeamsButton
                  variant="outline"
                  onClick={() => setShowEditModal(false)}
                  className="flex-1"
                >
                  –û—Ç–º–µ–Ω–∞
                </TeamsButton>
              </div>
            </div>
          )}
        </TeamsModal>

        <TeamsModal
          isOpen={showCreateForm}
          onClose={() => setShowCreateForm(false)}
          title="–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞"
          size="xl"
        >
          <ContractForm
            onSubmit={handleCreateContract}
            loading={generating}
          />
        </TeamsModal>
      </div>
    </div>
  )
} 