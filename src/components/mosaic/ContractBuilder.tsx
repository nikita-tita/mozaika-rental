'use client'

import React, { useState, useEffect } from 'react'
import { ContractTemplate, Property, User } from '@/types'
import { Button } from '@/components/ui/Button'
import { Input } from '@/components/ui/Input'
import { Textarea } from '@/components/ui/Textarea'
import { Select } from '@/components/ui/Select'

interface ContractBuilderProps {
  property: Property
  realtor: User
  onContractGenerated: (contractData: any) => void
}

interface ContractData {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  propertyTitle: string
  propertyAddress: string
  propertyType: string
  monthlyRent: number
  deposit: number
  
  // –ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å
  landlordName: string
  landlordPassport: string
  landlordAddress: string
  
  // –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä
  tenantName: string
  tenantPassport: string
  tenantPhone: string
  tenantEmail: string
  
  // –£—Å–ª–æ–≤–∏—è
  startDate: string
  endDate: string
  utilities: boolean
  additionalTerms: string
}

export default function ContractBuilder({ 
  property, 
  realtor, 
  onContractGenerated 
}: ContractBuilderProps) {
  const [step, setStep] = useState(1)
  const [contractData, setContractData] = useState<ContractData>({
    propertyTitle: property.title,
    propertyAddress: `${property.address}, ${property.city}`,
    propertyType: property.type,
    monthlyRent: property.pricePerMonth,
    deposit: property.deposit || 0,
    landlordName: '',
    landlordPassport: '',
    landlordAddress: '',
    tenantName: '',
    tenantPassport: '',
    tenantPhone: '',
    tenantEmail: '',
    startDate: '',
    endDate: '',
    utilities: property.utilities,
    additionalTerms: ''
  })

  const [templates, setTemplates] = useState<ContractTemplate[]>([])
  const [selectedTemplate, setSelectedTemplate] = useState<string>('')

  // –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
  useEffect(() => {
    // TODO: –ó–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
    const defaultTemplates: ContractTemplate[] = [
      {
        id: '1',
        name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã',
        description: '–ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∞—Ä–µ–Ω–¥—ã –∂–∏–ª–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
        content: '',
        variables: {},
        isDefault: true,
        isActive: true,
        createdBy: 'system',
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: '2',
        name: '–ü—Ä–µ–º–∏—É–º –¥–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã',
        description: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏',
        content: '',
        variables: {},
        isDefault: false,
        isActive: true,
        createdBy: 'system',
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ]
    setTemplates(defaultTemplates)
    setSelectedTemplate(defaultTemplates[0]?.id || '')
  }, [])

  const updateContractData = (field: keyof ContractData, value: any) => {
    setContractData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const generateContract = async () => {
    try {
      // TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞
      const response = await fetch('/api/contracts/generate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          templateId: selectedTemplate,
          contractData,
          propertyId: property.id,
          realtorId: realtor.id
        }),
      })

      if (response.ok) {
        const result = await response.json()
        onContractGenerated(result.data)
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞:', error)
    }
  }

  const renderStep1 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">üìù –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞</h2>
        <p className="text-gray-400">–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã –∑–∞ 3 –º–∏–Ω—É—Ç—ã</p>
      </div>

      <div className="bg-gray-800 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-white mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω</h3>
        <div className="grid gap-4">
          {templates.map((template) => (
            <div
              key={template.id}
              className={`p-4 border rounded-lg cursor-pointer transition-all ${
                selectedTemplate === template.id
                  ? 'border-green-500 bg-green-500/10'
                  : 'border-gray-600 hover:border-gray-500'
              }`}
              onClick={() => setSelectedTemplate(template.id)}
            >
              <h4 className="font-medium text-white">{template.name}</h4>
              <p className="text-sm text-gray-400 mt-1">{template.description}</p>
              {template.isDefault && (
                <span className="inline-block bg-green-500 text-black text-xs px-2 py-1 rounded mt-2">
                  –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                </span>
              )}
            </div>
          ))}
        </div>
      </div>

      <div className="flex justify-between">
        <div></div>
        <Button
          onClick={() => setStep(2)}
          disabled={!selectedTemplate}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          –î–∞–ª–µ–µ
        </Button>
      </div>
    </div>
  )

  const renderStep2 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">–î–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞</h2>
        <p className="text-gray-400">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
          </label>
          <Input
            value={contractData.propertyTitle}
            onChange={(e) => updateContractData('propertyTitle', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ê–¥—Ä–µ—Å
          </label>
          <Input
            value={contractData.propertyAddress}
            onChange={(e) => updateContractData('propertyAddress', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
          </label>
          <Select
            value={contractData.propertyType}
            onChange={(e) => updateContractData('propertyType', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            options={[
              { value: 'APARTMENT', label: '–ö–≤–∞—Ä—Ç–∏—Ä–∞' },
              { value: 'HOUSE', label: '–î–æ–º' },
              { value: 'STUDIO', label: '–°—Ç—É–¥–∏—è' },
              { value: 'COMMERCIAL', label: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è' },
              { value: 'ROOM', label: '–ö–æ–º–Ω–∞—Ç–∞' }
            ]}
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ê—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞ (‚ÇΩ/–º–µ—Å)
          </label>
          <Input
            type="number"
            value={contractData.monthlyRent}
            onChange={(e) => updateContractData('monthlyRent', Number(e.target.value))}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ó–∞–ª–æ–≥ (‚ÇΩ)
          </label>
          <Input
            type="number"
            value={contractData.deposit}
            onChange={(e) => updateContractData('deposit', Number(e.target.value))}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div className="flex items-center">
          <input
            type="checkbox"
            id="utilities"
            checked={contractData.utilities}
            onChange={(e) => updateContractData('utilities', e.target.checked)}
            className="mr-2"
          />
          <label htmlFor="utilities" className="text-sm text-gray-300">
            –ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤–∫–ª—é—á–µ–Ω—ã
          </label>
        </div>
      </div>

      <div className="flex justify-between">
        <Button
          onClick={() => setStep(1)}
          variant="outline"
          className="border-gray-600 text-gray-300 hover:bg-gray-700"
        >
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={() => setStep(3)}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          –î–∞–ª–µ–µ
        </Button>
      </div>
    </div>
  )

  const renderStep3 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">–î–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è</h2>
        <p className="text-gray-400">–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –§–ò–û –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è
          </label>
          <Input
            value={contractData.landlordName}
            onChange={(e) => updateContractData('landlordName', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </label>
          <Input
            value={contractData.landlordPassport}
            onChange={(e) => updateContractData('landlordPassport', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="1234 567890"
          />
        </div>

        <div className="md:col-span-2">
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
          </label>
          <Input
            value={contractData.landlordAddress}
            onChange={(e) => updateContractData('landlordAddress', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1, –∫–≤. 1"
          />
        </div>
      </div>

      <div className="flex justify-between">
        <Button
          onClick={() => setStep(2)}
          variant="outline"
          className="border-gray-600 text-gray-300 hover:bg-gray-700"
        >
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={() => setStep(4)}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          –î–∞–ª–µ–µ
        </Button>
      </div>
    </div>
  )

  const renderStep4 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">–î–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞</h2>
        <p className="text-gray-400">–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—É–¥—É—â–µ–º –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–µ</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –§–ò–û –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞
          </label>
          <Input
            value={contractData.tenantName}
            onChange={(e) => updateContractData('tenantName', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </label>
          <Input
            value={contractData.tenantPassport}
            onChange={(e) => updateContractData('tenantPassport', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="9876 543210"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –¢–µ–ª–µ—Ñ–æ–Ω
          </label>
          <Input
            value={contractData.tenantPhone}
            onChange={(e) => updateContractData('tenantPhone', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="+7 (999) 123-45-67"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            Email
          </label>
          <Input
            type="email"
            value={contractData.tenantEmail}
            onChange={(e) => updateContractData('tenantEmail', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            placeholder="tenant@example.com"
          />
        </div>
      </div>

      <div className="flex justify-between">
        <Button
          onClick={() => setStep(3)}
          variant="outline"
          className="border-gray-600 text-gray-300 hover:bg-gray-700"
        >
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={() => setStep(5)}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          –î–∞–ª–µ–µ
        </Button>
      </div>
    </div>
  )

  const renderStep5 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">–£—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã</h2>
        <p className="text-gray-400">–£–∫–∞–∂–∏—Ç–µ —Å—Ä–æ–∫–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã
          </label>
          <Input
            type="date"
            value={contractData.startDate}
            onChange={(e) => updateContractData('startDate', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—Ä–µ–Ω–¥—ã
          </label>
          <Input
            type="date"
            value={contractData.endDate}
            onChange={(e) => updateContractData('endDate', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
          />
        </div>

        <div className="md:col-span-2">
          <label className="block text-sm font-medium text-gray-300 mb-2">
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
          </label>
          <Textarea
            value={contractData.additionalTerms}
            onChange={(e) => updateContractData('additionalTerms', e.target.value)}
            className="bg-gray-700 border-gray-600 text-white"
            rows={4}
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞..."
          />
        </div>
      </div>

      <div className="flex justify-between">
        <Button
          onClick={() => setStep(4)}
          variant="outline"
          className="border-gray-600 text-gray-300 hover:bg-gray-700"
        >
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={() => setStep(6)}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          –î–∞–ª–µ–µ
        </Button>
      </div>
    </div>
  )

  const renderStep6 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-white mb-2">–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h2>
        <p className="text-gray-400">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –¥–æ–≥–æ–≤–æ—Ä–∞</p>
      </div>

      <div className="bg-gray-800 rounded-lg p-6 space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <h4 className="font-medium text-white mb-2">–û–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</h4>
            <div className="text-sm text-gray-400 space-y-1">
              <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {contractData.propertyTitle}</p>
              <p><strong>–ê–¥—Ä–µ—Å:</strong> {contractData.propertyAddress}</p>
              <p><strong>–¢–∏–ø:</strong> {contractData.propertyType}</p>
              <p><strong>–ê—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞:</strong> {contractData.monthlyRent.toLocaleString()} ‚ÇΩ/–º–µ—Å</p>
              <p><strong>–ó–∞–ª–æ–≥:</strong> {contractData.deposit.toLocaleString()} ‚ÇΩ</p>
            </div>
          </div>

          <div>
            <h4 className="font-medium text-white mb-2">–ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å</h4>
            <div className="text-sm text-gray-400 space-y-1">
              <p><strong>–§–ò–û:</strong> {contractData.landlordName}</p>
              <p><strong>–ü–∞—Å–ø–æ—Ä—Ç:</strong> {contractData.landlordPassport}</p>
              <p><strong>–ê–¥—Ä–µ—Å:</strong> {contractData.landlordAddress}</p>
            </div>
          </div>

          <div>
            <h4 className="font-medium text-white mb-2">–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä</h4>
            <div className="text-sm text-gray-400 space-y-1">
              <p><strong>–§–ò–û:</strong> {contractData.tenantName}</p>
              <p><strong>–ü–∞—Å–ø–æ—Ä—Ç:</strong> {contractData.tenantPassport}</p>
              <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {contractData.tenantPhone}</p>
              <p><strong>Email:</strong> {contractData.tenantEmail}</p>
            </div>
          </div>

          <div>
            <h4 className="font-medium text-white mb-2">–£—Å–ª–æ–≤–∏—è</h4>
            <div className="text-sm text-gray-400 space-y-1">
              <p><strong>–ù–∞—á–∞–ª–æ:</strong> {contractData.startDate}</p>
              <p><strong>–û–∫–æ–Ω—á–∞–Ω–∏–µ:</strong> {contractData.endDate}</p>
              <p><strong>–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ:</strong> {contractData.utilities ? '–í–∫–ª—é—á–µ–Ω—ã' : '–ù–µ –≤–∫–ª—é—á–µ–Ω—ã'}</p>
            </div>
          </div>
        </div>

        {contractData.additionalTerms && (
          <div>
            <h4 className="font-medium text-white mb-2">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</h4>
            <p className="text-sm text-gray-400">{contractData.additionalTerms}</p>
          </div>
        )}
      </div>

      <div className="flex justify-between">
        <Button
          onClick={() => setStep(5)}
          variant="outline"
          className="border-gray-600 text-gray-300 hover:bg-gray-700"
        >
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={generateContract}
          className="bg-green-500 hover:bg-green-600 text-black"
        >
          üéâ –°–æ–∑–¥–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä
        </Button>
      </div>
    </div>
  )

  const renderProgressBar = () => (
    <div className="mb-8">
      <div className="flex justify-between text-sm text-gray-400 mb-2">
        <span>–®–∞–≥ {step} –∏–∑ 6</span>
        <span>{Math.round((step / 6) * 100)}%</span>
      </div>
      <div className="w-full bg-gray-700 rounded-full h-2">
        <div
          className="bg-green-500 h-2 rounded-full transition-all duration-300"
          style={{ width: `${(step / 6) * 100}%` }}
        ></div>
      </div>
    </div>
  )

  return (
    <div className="max-w-4xl mx-auto p-6">
      {renderProgressBar()}
      
      {step === 1 && renderStep1()}
      {step === 2 && renderStep2()}
      {step === 3 && renderStep3()}
      {step === 4 && renderStep4()}
      {step === 5 && renderStep5()}
      {step === 6 && renderStep6()}
    </div>
  )
} 